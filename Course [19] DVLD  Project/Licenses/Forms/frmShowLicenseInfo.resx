<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TXUAAAAASUVORK5CYII=
</value>
  </data>
</root>